/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(head == NULL)
        {
            return head;
        }
        
        int c =k;
        ListNode* cur = head, *pre = NULL, *fwd = NULL;
        while(cur != NULL && c)
        {
            fwd = cur->next;
            cur->next = pre;
            pre = cur;
            cur = fwd;
            c--;
        }
        
        c =0;
        ListNode* te = cur;
        while(te!= NULL)
        {
            te = te->next;
            c++;
        }
        
        if(c < k)
        {
            head->next = cur;
        }
        else{
            if(fwd!= NULL){
            head->next = reverseKGroup(cur, k);
        }}
        
        return pre;
    }
};
